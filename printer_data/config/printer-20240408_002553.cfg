[include mainsail.cfg]
[include canbus.cfg]
[include macros/*.cfg]
[include KAMP_Settings.cfg]
[include test_probe_accuracy.cfg]

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32h723xx_14002C001751313434373135-if00
restart_method: command

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 3000
max_z_velocity: 15
max_z_accel: 350
square_corner_velocity: 5.0

##  B Stepper - MOTOR 0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200 
#endstop_pin: PG6
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: 0
position_endstop: 350
position_max: 350
homing_speed: 20
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC4
interpolate: True
run_current: 0.8
#hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0
diag_pin: PG6
driver_SGTHRS: 65

## Y Stepper on MOTOR1 (A Motor)
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:200
#endstop_pin: PG9
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_min: 0
position_endstop: 350
position_max: 350
homing_speed: 20
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PD11
interpolate: True
run_current: 0.8
#hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0
diag_pin: ^PG9
driver_SGTHRS: 65

## Z0 Stepper - Front Left on MOTOR2_1
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
endstop_pin: probe:z_virtual_endstop
position_max: 340
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.8
#hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z1 Stepper - Rear Left on MOTOR3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.8
#hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z2 Stepper - Rear Right on MOTOR4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.8
#hold_current: 0.80
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z3 Stepper - Front Right on MOTOR5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.8
#hold_current: 0.80
sense_resistor: 0.110
stealthchop_threshold: 0

[extruder]
step_pin: EBBCan: PD0
dir_pin: EBBCan: PD1
enable_pin: !EBBCan: PD2
rotation_distance: 22.6789511
gear_ratio: 50:10
microsteps: 32
full_steps_per_rotation: 200
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan: PB13
sensor_pin: EBBCan: PA3
min_temp: 0
max_temp: 300
max_power: 1.0
min_extrude_temp: 170
max_extrude_only_distance: 500
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
pressure_advance: 0.03
pressure_advance_smooth_time: 0.040
sensor_type: EPCOS 100K B57560G104F
max_extrude_cross_section: 5

[heater_bed]
heater_pin: PA3
sensor_type: Generic 3950
sensor_pin: PF3
max_power: 0.6
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769
  
[firmware_retraction]
retract_length: 1
retract_speed: 45
unretract_extra_length: 0
unretract_speed: 45

[pause_resume]
recover_velocity: 50.
#   When capture/restore is enabled, the speed at which to return to
#   the captured position (in mm/s). Default is 50.0 mm/s.

[exclude_object]

#####################################################################
#   Fan Control
#####################################################################

##  Print Cooling Fan - FAN0
# [fan]
# pin: PA8
# kick_start_time: 0.5
# off_below: 0.10


# ##  Hotend Fan - FAN1
# [heater_fan hotend_fan]
# pin: PE5
# max_power: 1.0
# kick_start_time: 0.5
# heater: extruder
# heater_temp: 50.0
# ##  If you are experiencing back flow, you can reduce fan_speed
# #fan_speed: 1.0

##  Controller fan - FAN2
[controller_fan controller_fan]
pin: PD12
kick_start_time: 0.5
heater: heater_bed

#  Exhaust fan - FAN3
[heater_fan exhaust_fan]
pin: PD13
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0
heater: heater_bed
heater_temp: 60
fan_speed: 1.0

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>
#####################################################################
#   Bed
#####################################################################

[quad_gantry_level]
gantry_corners:
   -60,-10
   410,420
points:
   50,25
   50,300
   300,300
   300,25
speed: 150
horizontal_move_z: 10
retries: 20
retry_tolerance: 0.007
max_adjust: 10

[idle_timeout]
gcode:
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
#   "TURN_OFF_HEATERS" and "M84".
timeout: 3600
#   Idle time (in seconds) to wait before running the above G-Code
#   commands. The default is 600 seconds.

#####################################################################
#   Macros
#####################################################################
[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    {% if printer.quad_gantry_level.applied == False %}
        QUAD_GANTRY_LEVEL
        G28 Z
    {% endif %}
    G28
    PARK
    RESTORE_GCODE_STATE NAME=STATE_G32
    
[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED_TEMP|default("60")|int %}
  {% set target_extruder = params.HOTEND_TEMP|default("200")|int %}
  {% set target_chamber = params.CHAMBER|default("40")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
  {% if printer.toolhead.homed_axes != "xyz" %}
    G32
  {% endif %}
  G90                   # Absolut position

  ##  Uncomment for bed mesh (1 of 2)
  BED_MESH_CLEAR       # Clears old saved bed mesh (if any)

  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if target_bed|int > 90 %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    M106 S255                                           # Turns on the PT-fan

    ##  Uncomment if you have a Nevermore.
    #SET_PIN PIN=nevermore VALUE=1                      # Turns on the nevermore

    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Displays info
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp

  # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Soak for 5min"                # Displays info
  {% endif %}

  # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
  SET_DISPLAY_TEXT MSG="Hotend: 150c"          # Displays info
  M109 S150                                    # Heats the nozzle to 150c

  ##  Uncomment for V2 (Quad gantry level AKA QGL)
  SET_DISPLAY_TEXT MSG="QGL"      # Displays info
  STATUS_LEVELING                 # Sets SB-leds to leveling-mode
  quad_gantry_level               # Levels the buildplate via QGL
  G28 Z                           # Homes Z again after QGL


  ##  Uncomment for bed mesh (2 of 2)
  SET_DISPLAY_TEXT MSG="Bed mesh"    # Displays info
  BED_MESH_CALIBRATE                 # Starts bed mesh

  # Heats up the nozzle up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
  G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
  M107                                                          # Turns off partcooling fan
  M109 S{target_extruder}                                       # Heats the nozzle to printing temp

  # Gets ready to print by doing a purge line and updating the SB-leds
  SET_DISPLAY_TEXT MSG="Printer goes brr"          # Displays info
  LINE_PURGE

[gcode_macro PRINT_END]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    STANDBY

    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR

    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
  M400 ; wait for buffer to clear
  G92 E0 ; zero the extruder
  G1 E-5.0 F1800
  
  STANDBY
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = -0.750
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.042500, -0.010500, 0.001500
#*# 	  -0.006500, 0.013500, -0.005000
#*# 	  -0.006500, -0.010500, -0.041500
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 117.5
#*# max_x = 232.5
#*# min_y = 117.5
#*# max_y = 232.5
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 38.725
#*# pid_ki = 1.241
#*# pid_kd = 302.054
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 13.645
#*# pid_ki = 0.395
#*# pid_kd = 117.699
